---
name: Python Code Assurance and Tests
on:
  workflow_call:
    inputs:
      WORKDIR:
        required: false
        type: string
        default: ./
      PYTHON_VERSION:
        required: false
        type: string
        default: 3.7
      POETRY_VERSION:
        required: false
        type: string
        default: 1.1.12
    outputs:
      VERSION:
        value: ${{ jobs.tests.outputs.VERSION }}
    secrets:
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true

jobs:
  code-assurance:
    name: Quality assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: jusbrasil/data-workflows/.github/actions/setup-python@main
        with:
          PYTHON_VERSION: ${{ inputs.PYTHON_VERSION }}
          POETRY_VERSION: ${{ inputs.POETRY_VERSION }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Install Deps
        working-directory: ${{ inputs.WORKDIR }}
        run: poetry install

      - name: Run Quality Assurance
        working-directory: ${{ inputs.WORKDIR }}
        run: make quality-assurance

  tests:
    name: Tests
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.setvars.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: jusbrasil/data-workflows/.github/actions/setup-python@main
        with:
          PYTHON_VERSION: ${{ inputs.PYTHON_VERSION }}
          POETRY_VERSION: ${{ inputs.POETRY_VERSION }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Install Deps
        working-directory: ${{ inputs.WORKDIR }}
        run: poetry install

      - name: Run Tests
        working-directory: ${{ inputs.WORKDIR }}
        run: poetry run pytest .

      - name: Expose variables
        working-directory: ${{ inputs.WORKDIR }}
        id: setvars
        run: |-
          echo "::set-output name=VERSION::$(poetry version -s)"
